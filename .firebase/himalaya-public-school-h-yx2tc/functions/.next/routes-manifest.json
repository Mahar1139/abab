{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/academic-programs",
      "regex": "^/academic\\-programs(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/academic\\-programs(?:/)?$"
    },
    {
      "page": "/admissions",
      "regex": "^/admissions(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admissions(?:/)?$"
    },
    {
      "page": "/ai-assistant",
      "regex": "^/ai\\-assistant(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/ai\\-assistant(?:/)?$"
    },
    {
      "page": "/coding-classes",
      "regex": "^/coding\\-classes(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/coding\\-classes(?:/)?$"
    },
    {
      "page": "/computer-classes",
      "regex": "^/computer\\-classes(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/computer\\-classes(?:/)?$"
    },
    {
      "page": "/contact",
      "regex": "^/contact(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/contact(?:/)?$"
    },
    {
      "page": "/developed-by",
      "regex": "^/developed\\-by(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/developed\\-by(?:/)?$"
    },
    {
      "page": "/events-calendar",
      "regex": "^/events\\-calendar(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/events\\-calendar(?:/)?$"
    },
    {
      "page": "/faculty",
      "regex": "^/faculty(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/faculty(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/library",
      "regex": "^/library(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/library(?:/)?$"
    },
    {
      "page": "/mandatory-disclosure",
      "regex": "^/mandatory\\-disclosure(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/mandatory\\-disclosure(?:/)?$"
    },
    {
      "page": "/parent-portal",
      "regex": "^/parent\\-portal(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/parent\\-portal(?:/)?$"
    },
    {
      "page": "/quiz",
      "regex": "^/quiz(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/quiz(?:/)?$"
    },
    {
      "page": "/resources",
      "regex": "^/resources(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/resources(?:/)?$"
    },
    {
      "page": "/robotics-classes",
      "regex": "^/robotics\\-classes(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/robotics\\-classes(?:/)?$"
    },
    {
      "page": "/school-life",
      "regex": "^/school\\-life(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/school\\-life(?:/)?$"
    },
    {
      "page": "/teacher-conduit",
      "regex": "^/teacher\\-conduit(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/teacher\\-conduit(?:/)?$"
    },
    {
      "page": "/tech-programs",
      "regex": "^/tech\\-programs(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/tech\\-programs(?:/)?$"
    },
    {
      "page": "/track-performance",
      "regex": "^/track\\-performance(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/track\\-performance(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}